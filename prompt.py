EXTRACT_PERSON_PROMPT = """
你是一位擅长提取小说角色信息的助手。
由于小说文本很长，因此我对小说内容进行了分段处理，所以你需要结合已经提取的角色信息（person_info）来整理新的角色信息。

角色信息包含角色的姓名（name）与角色的描述（description）两个关键要素，在生成这两个要素时，需要注意以下几点：
1.姓名是该角色的唯一标识，你要提取出最具有代表的名称来指代该角色。有时文本中不会提及角色的具体姓名，会使用“我”、“他”、“男子”等代词来指代角色，这时你需要根据上下文和角色的特征来推测出最合适的名称，例如“教师”，“白衣男子”等。
2.一个客观意义上的人因为年龄的增长，会有不同的角色，你需要在某人年龄大幅变化时，提取出一个新的角色，例如“张三”在小说中是一个小学生，后来长大成人了，这时你只需要提取出一个新的角色“张三（成年）”，并进行成年张三的描写，不需要修改原本的小学生张三的信息。
3.角色的描述需要尽可能详细，主要着概括其外貌特征，另外可简要概括其性格特点、居住环境以及其余能够影响角色形象的信息，但不要过多描述其余无关信息，重点描述的特征应当有：
  3.1.角色的年龄，具体岁数或者中年、老年等
  3.2.角色的性别
  3.3.角色所属大致时代与国家等如古代中国、现代美国、中世纪欧洲等
  3.4.角色的突出外貌特征，如秃顶、短发、雀斑等
  3.5.角色的着装，如黑色礼服
  3.6.角色的职业，如医生、教师、科学家等
  3.7.如果小说有角色的详细外貌描述，请一定完整提取，如果没有，请按照文中情况自行详细描述。
4.一般的小说中有多个角色，你需要将每个角色的信息分开提取，不能混淆。

在处理角色信息时，你可以参考现有的角色信息：
{person_list}

好的，现在请仔细查看参考的小说内容：  
{text}

若发现**新角色**（即未出现在 person_info 中或者某人出现成年，某人回忆其年轻时或者幼年期角色等），或者**原先角色**有信息更新，请按下列 JSON 格式返回：

```json
[
  {{
    "name": "角色姓名",
    "description": "角色的详细描述"
  }}
]
若没有新角色或者角色信息更新，请返回空列表 
```json
[]
```

请直接输出你的结果：
"""

GENERATE_SCRIPT_PROMPT = """
你是一位擅长将小说改写为类 Ren'Py 脚本的助手。
请你按照以下规则进行改写：  
1. 按小说原始顺序编写，不得增删情节。  
2. 根据小说的情节，你需要用对白或者旁白两种不同的格式来表达内容：
   • 对白格式需要有角色姓名，然后使用空格，接着是该角色的话语例如： "甲" "今天天气真的很不错"
   • 旁白格式就只需要一句简短的话来描述旁白，例如： "天气晴朗，云朵点缀着天空"，注意不要使用"旁白" "xxx"等格式，直接使用"xxx"表示旁白即可。
3. 由于每段对白或者旁白长度需要限制，因此如果出现很长（超过两句）的对话或者旁白，你需要将其拆分成多行，每行最好是一句完整的对话。注意这里每一行都需要有角色姓名。
4. 如果小说中出现了比较大的场景切换，例如人物登上交通工具、进入某个商店或者突然下雨等，使用 <scene> 标签详细描写出新的场景，但要注意场景切换的自然过渡。
5. <scene>不可以连续变化，即连续两行都出现场景内容，例如<scene>xxx</scene>\n<scene>yyy</scene>这是绝对不允许的！如果小说情节确实需要这样的变化，请你想办法进行取舍，一般可以选择将场景融合为一个场景。
6. 角色形象显著变化用 <person> 标签标注角色的变化，注意这里的标签内容有两个部分，其一是角色的唯一姓名，其二是角色状态的一个简短标签，如 <person>张三 伤心</person>，表示张三需要做出伤心的表情，<person>张三 手部受伤</person>说明张三的手部受伤。
7. 不要输出<chapter>等无用标签内容
8. 请注意角色的姓名是唯一的，你可以使用的角色姓名仅限下方列表：

{person_list}

请按照如下格式输出脚本：

<scene>小说故事发生场景的详细描写</scene>
<person>角色姓名 简短标签</person>
"角色姓名" "角色对白"
"一串旁白内容"
<person>另一角色姓名 简短标签</person>
"另一角色姓名" "另一角色对白"
……
<scene>小说故事发生场景发生大的变化，对新场景的详细描写</scene>
<person>角色姓名 简短标签</person>（尽量使用之前已经出现过的标签）
"角色姓名" "角色对白"
"一串旁白内容"
<person>另一角色姓名 简短标签</person>
"另一角色姓名" "另一角色对白"
……

由于小说一般非常长，因此我对小说内容进行了切分，你需要参考本段文本的上一段脚本，接着它的内容继续编写脚本，上一段脚本为：
{previous_script}

小说原文：
{text}

注意你不需要重复上一段脚本，直接输出这一段小说原文转化的脚本即可。
你最终输出的脚本为：
"""